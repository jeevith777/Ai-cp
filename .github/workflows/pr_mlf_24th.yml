name: PRs in mlf-gitops Mod 24th

on:
  workflow_dispatch:   # Manual trigger
  workflow_run:
    workflows: ["Close stale PRs into int-blr"]
    types:
      - completed

  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - develop   # Only for PRs into develop

jobs:
  stale-and-close-prs:
    runs-on: ubuntu-latest
    steps:
      - name: Close older version PRs in target repo
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.FGT_1 }}
          script: |
            const OWNER = "jeevith777";
            const REPO = "mlf-gitops";

            function normalizeParts(ver) {
              const parts = ver.split(".").map(Number);
              while (parts.length < 3) parts.push(0);
              return parts;
            }

            function compareVersions(a, b) {
              const pa = normalizeParts(a);
              const pb = normalizeParts(b);
              for (let i = 0; i < 3; i++) {
                if (pa[i] > pb[i]) return 1;
                if (pa[i] < pb[i]) return -1;
              }
              return 0;
            }

            const versionRegex = /(\d+\.\d+\.\d+)/;

            // Get all open PRs
            const { data: pullRequests } = await github.rest.pulls.list({
              owner: OWNER,
              repo: REPO,
              state: "open",
              base: "develop"
            });

            // Collect all versions
            let prVersions = [];
            for (const pr of pullRequests) {
              const m = pr.title.match(versionRegex);
              if (!m) continue;
              prVersions.push({ number: pr.number, title: pr.title, version: m[1], updated_at: pr.updated_at, labels: pr.labels.map(l => l.name) });
            }


            // Find highest version
            let maxVersion = prVersions[0].version;
            for (const { version } of prVersions) {
              if (compareVersions(version, maxVersion) > 0) maxVersion = version;
            }

            core.info(`Latest version detected: ${maxVersion}`);

            // Separate latest PRs vs older PRs
            const latestPRs = prVersions.filter(pr => compareVersions(pr.version, maxVersion) === 0);
            const olderPRs = prVersions.filter(pr => compareVersions(pr.version, maxVersion) < 0);

            // Process older PRs
            for (const pr of olderPRs) {
              // If not labeled stale → label + comment
              if (!pr.labels.includes("stale")) {
                core.info(`Marking PR #${pr.number} (${pr.version}) as stale.`);
                await github.rest.issues.addLabels({
                  owner: OWNER,
                  repo: REPO,
                  issue_number: pr.number,
                  labels: ["stale"]
                });

                await github.rest.issues.createComment({
                  owner: OWNER,
                  repo: REPO,
                  issue_number: pr.number,
                  body: `⚠️ This PR is marked as stale because newer version PR(s) (${maxVersion}) exist. It will be closed after 5 minutes of inactivity.`
                });
              } else {
                // Already stale → check if >5 min since update
                const updatedAt = new Date(pr.updated_at);
                const now = new Date();
                const diffMin = (now - updatedAt) / 1000 / 60;

                if (diffMin >= 5) {
                  core.info(`Closing PR #${pr.number} (${pr.version}) after 5 min stale.`);
                  await github.rest.pulls.update({
                    owner: OWNER,
                    repo: REPO,
                    pull_number: pr.number,
                    state: "closed"
                  });

                  await github.rest.issues.createComment({
                    owner: OWNER,
                    repo: REPO,
                    issue_number: pr.number,
                    body: `🚫 This PR has been closed due to inactivity (5+ minutes) after being marked stale.`
                  });
                }
              }
            }
